---
format: 
  dashboard:
    scrolling: true
    lang: pt-br
    expandable: false
include-in-header: custom-theme.css
navbar: false
server: shiny
---

```{r}
#| label: definir-tema
#| message: false
#| context: setup
ano <- 2025

knitr::opts_knit$set(root.dir = here::here())

library(shiny)
library(bslib)
library(bsicons)
options(box.path = here::here())

box::use(modulos/importar_base_de_dados)


box::use(
  dplyr[`%>%`,
        filter,
        mutate] 
)

```

```{r}
#| label: carregar-dados
#| message: false
#| results: hide
#| context: setup

box::use(
  modulos/carregar_dados[...]
)

```


```{r}
#| label: carregar-visualizacoes
#| message: false
#| context: setup

box::use(
  modulos/titulo_do_relatorio[cabecalho],
  modulos/populacao_e_cadastro,
  modulos/caixas_acessos,
  modulos/caixas_unidades,
  modulos/grafico_taxa,
  modulos/tp_aparelho,
  modulos/caixas_populacao_brasil,
  modulos/tabela,
  modulos/tabela_unidades
)


```


## Row {height="5%"}

```{r}
#| label: "Titulo do Relatorio"
```
![](images/header.svg){width="50%"}

---

## Row {height="5%"}
```{r}
#| label: "Seleções do aplicativo"

div(id = "cabecalho",
    selectizeInput("modalidade",
                "Tipo de ensino",
                choices = c("Rede Presencial" = "0",
                            "Rede EAD" = "1"),
                options = list(dropdownParent = 'body')),
    selectizeInput(
      inputId = "DR",
      label = "Departamento Regional",
      choices = opcoes,
      options = list(dropdownParent = 'body', optgroupField = 'group')
    ),
    uiOutput("unidade_selecao")
)
```

## Row {height="11%"}


```{r}
#| label: primeiro-segmento
uiOutput("PrimeiroSegmento")

```


```{r}
#| label: processa-dados-primeiro-segmento
#| context: server

observe({
  req(input$modalidade)
  if(input$modalidade == "0"){
opcoes_new <- opcoes
    updateSelectizeInput(
      session,
      "DR",
      label = "Departamento Regional",
      choices = opcoes_new
    )
  } else {
opcoes_new <- opcoes[-6]
    updateSelectizeInput(
      session,
      "DR",
      label = "Departamento Regional - Pólo",
      choices = opcoes_new
    )
  }
})

output$PrimeiroSegmento <- renderUI({

if(input$unidade != "0" && !is.null(input$unidade)) {
saida <- card(
card_header("Questionários válidos e Taxa de resposta"),
caixas_unidades$ui("CaixasUnidades")
)
} else {
saida <- card(
card_header("População e cadastro"),
populacao_e_cadastro$ui("CaixasPopulacao")
)
}
saida
})

caixas_unidades$server("CaixasUnidades", 
                        dados_filtrado,
                        populacao_filtrada)

output$unidade_selecao <- renderUI({
  req(input$modalidade == 0)
  req(input$DR != "SG")

escolhas <- c("Todas" = "0", unidades[grep(input$DR, unidades) ])

  selectizeInput(
    inputId = "unidade",
    label = "Unidade",
    choices = escolhas,
    options = list(dropdownParent = 'body', optgroupField = 'group')
  )
})

DR_selecionado <- reactive({
  req(input$DR)
  req(!is.null(input$DR))
  input$DR

})

unidade_selecionado <- reactive({
  req(input$unidade)
if(input$unidade == 0){
saida <- paste(input$DR, input$unidade, sep = "-")
} else {
 saida <- input$unidade
}

saida
})

populacao_filtrada <- reactive({
  req(input$modalidade)

  saida <- dados_populacao[[input$modalidade]] %>% 
    filter(DR == DR_selecionado())


if(input$modalidade == "0"){
saida <- saida %>% 
    filter(cod.unidade == unidade_selecionado())
}


saida
})

populacao_e_cadastro$server("CaixasPopulacao", 
                             populacao_filtrada)


dados_filtrado <- reactive({
  req(input$modalidade)
  req(DR_selecionado())
  saida <- dados_primarios[[input$modalidade]]

if(input$modalidade == "1" & DR_selecionado() != "BR") {
saida <- saida %>% 
            filter(DR == DR_selecionado())
}

if(input$modalidade == "0") {
req(unidade_selecionado())

if(DR_selecionado() != "BR"){
saida <- saida %>% 
            filter(DR == DR_selecionado())
} else {
return(saida %>% mutate(Total = total.dr))
}
if(input$unidade != 0){
saida <- saida %>% 
            filter(cod.unidade == unidade_selecionado()) %>% 
            mutate(Total = total.unidade)
} else {
saida <- saida %>% 
            mutate(Total = total.dr)
}

}

return(saida)
})




```

## Row {height="33%"}

```{r}
#| label: segundo-segmento

card(
  card_header("Informações do acesso ao questionário"),
  card_body(
    layout_columns(
      col_widths = c(3, 5, 4),
      caixas_acessos$ui("SegundoSegmento-Caixas"),
      card(id = "grafico-taxa-resposta",
        max_height = "600px",
        card_body(
          grafico_taxa$ui("SegundoSegmento-Acessos")
        )
      ),
      card(
        max_height = "600px",
        card_body(id = "tipo-de-aparelho",
          tp_aparelho$ui("SegundoSegmento-TipoDeAparelho")
        )
        
      )
    )
  )
)

```


```{r}
#| label: processa-dados-segundo-segmento
#| context: server

caixas_acessos$server("SegundoSegmento-Caixas", 
                      dados_filtrado)
grafico_taxa$server("SegundoSegmento-Acessos",
                    dados_filtrado,
                    DR_selecionado,
                    ano)

tp_aparelho$server("SegundoSegmento-TipoDeAparelho",
                   dados_filtrado,
                   DR_selecionado,
                   ano) 

```

## Row {height="46%"}

```{r}
#| label: terceiro-segmento

uiOutput("TerceiroSegmento")



```



```{r}
#| label: processa-dados-terceiro-segmento
#| context: server

output$TerceiroSegmento <- renderUI({
  if(input$unidade != "0" && !is.null(input$unidade)) {
saida <- card(
card_header(paste0("População e cadastro - ", DR_selecionado())),
populacao_e_cadastro$ui("CaixasPopulacaoDR"))

  } else {

        if(input$modalidade == 0){
saida <- card(
    card_header("Questionários válidos e Taxa de resposta",
    ),
    
    card_body(layout_columns(
        col_widths = c(4, 4, 4, 6,6),
        !!!caixas_populacao_brasil$ui("TerceiroSegmento-Caixas"),
        card(id = "tabela-terceiro-segmento",
min_width = "400px",
             card_body(
                 min_height = "750px",
                 tabela$ui("TerceiroSegmento-Tabela")
             )
        ),
        card(id = "unidade-terceiro-segmento",
min_width = "400px",
             card_body(
                 min_height = "750px",
                 #mapa$ui("TerceiroSegmento-Mapa")
                 tabela_unidades$ui("TerceiroSegmento-TabelaUnidades")
             )
             
        )
    )
    )
)
        }

if(input$modalidade == 1){
saida <- card(
    card_header("Questionários válidos e Taxa de resposta",
    ),
    
    card_body(layout_columns(
        col_widths = c(4, 4, 4, 12),
        !!!caixas_populacao_brasil$ui("TerceiroSegmento-Caixas"),
        card(id = "tabela-terceiro-segmento",
min_width = "400px",
             card_body(
                 min_height = "750px",
                 tabela$ui("TerceiroSegmento-Tabela")
             )
        )
    )
    )
)
}
  }

saida
})

populacao_filtrada_DR <- reactive({
  req(input$modalidade)
  req(DR_selecionado())

  saida <- dados_populacao[[input$modalidade]] %>% 
    filter(DR == DR_selecionado())

saida
})

dados_filtrados_DR <- reactive({
  req(input$modalidade)
  req(DR_selecionado())

  saida <- dados_primarios[[input$modalidade]] %>% 
    filter(DR == DR_selecionado())
})

populacao_e_cadastro$server("CaixasPopulacaoDR", 
                             populacao_filtrada_DR)

dados_brasil_filtrado <- reactive({
  req(input$modalidade)
  req(DR_selecionado())
  dados_primarios[[input$modalidade]] %>% 
mutate(Total = total.dr)
})

populacao_brasil_filtrado <- reactive({
  req(input$modalidade)
  req(DR_selecionado())
  dados_populacao[[input$modalidade]] %>%
filter(DR == "BR")
})

caixas_populacao_brasil$server("TerceiroSegmento-Caixas", 
                               dados_brasil_filtrado,
                               populacao_brasil_filtrado)

tabela$server("TerceiroSegmento-Tabela", 
              dados_brasil_filtrado,
              opcoes,
              DR_selecionado)
tabela_unidades$server("TerceiroSegmento-TabelaUnidades", 
                       dados_filtrados_DR,
                       populacao_filtrada_DR,
                       unidades)
# mapa$server("TerceiroSegmento-Mapa",
#             brasil,
#             dados_brasil_filtrado)

```



